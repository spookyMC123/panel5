<%- include('components/template') %>
<% /* SSB0aGluayBJJ3ZlIGZvdW5kIG15IHZvaWNlCkknbSBhIGxlZWNoIHN1Y2tpbmcgYmxvb2QgYmFncwpUYXN0ZSBkZWZlYXQsIGl0J3MgYSBzYW5kYmFnClNhbGluZSBTb2x1dGlvbg== */ %>
<main id="content">
  <div class="bg-transparent">
    <div class="sm:flex sm:items-center px-8 pt-4">
      <div class="sm:flex-auto">
        <h1 class="text-base font-medium leading-6 text-white"><%= req.translations.instances %></h1>
        <p class="mt-1 tracking-tight text-sm text-neutral-500"><%= req.translations.viewInstances %></p>
      </div>
      <% if (req.user.admin === true) { %>
        <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
          <label for="instance-toggle" class="flex items-center cursor-pointer">
            <span class="mr-3 text-sm font-medium text-white">Your Instances</span>
            <div class="relative">
              <input type="checkbox" id="instance-toggle" class="sr-only" <%= req.query.see === 'other' ? 'checked' : '' %>>
              <div class="w-9 px-1 h-5 bg-white/10 rounded-full shadow-inner"></div>
              <div class="dot absolute w-4 mt-1.5 ml-1.5 mr-1.5 h-4 bg-white rounded-full shadow -left-1 -top-1 transition"></div>
            </div>
            <span class="ml-3 text-sm font-medium text-white">All Instances</span>
          </label>
        </div>
      <% } %>
    </div>
  </div>
  <% if (req.query.err == "NOTACTIVEYET") { %>
    <div class="rounded-xl bg-amber-800/10 px-4 py-6 m-7">
      <div class="flex">
          <div class="flex-shrink-0 ml-1.5">
              <svg class="animate-spin mt-2 h-5 w-5 text-amber-400" xmlns="http://www.w3.org/2000/svg"
                  fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                  </circle>
                  <path class="opacity-75" fill="currentColor"
                      d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                  </path>
              </svg>
          </div>
          <div class="ml-5">
              <h3 class="text-sm font-medium text-amber-400">Awaiting Installation</h3>
              <div class="text-sm text-amber-400/50">
                  <p>The instance either isn't installed yet, or is in a failed state.</p>
              </div>
          </div>
      </div>
  </div>
    <% } %>	  
  <div class="px-4 sm:px-6 lg:px-8 mt-8">
    <% if (instances.length == 0) { %>
      <!-- No instances -->
      <div id="noInstancesContainer" class="text-center mt-64">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
          class="mx-auto h-12 w-12 text-neutral-500">
          <path fill-rule="evenodd"
            d="M11.622 1.602a.75.75 0 0 1 .756 0l2.25 1.313a.75.75 0 0 1-.756 1.295L12 3.118 10.128 4.21a.75.75 0 1 1-.756-1.295l2.25-1.313ZM5.898 5.81a.75.75 0 0 1-.27 1.025l-1.14.665 1.14.665a.75.75 0 1 1-.756 1.295L3.75 8.806v.944a.75.75 0 0 1-1.5 0V7.5a.75.75 0 0 1 .372-.648l2.25-1.312a.75.75 0 0 1 1.026.27Zm12.204 0a.75.75 0 0 1 1.026-.27l2.25 1.312a.75.75 0 0 1 .372.648v2.25a.75.75 0 0 1-1.5 0v-.944l-1.122.654a.75.75 0 1 1-.756-1.295l1.14-.665-1.14-.665a.75.75 0 0 1-.27-1.025Zm-9 5.25a.75.75 0 0 1 1.026-.27L12 11.882l1.872-1.092a.75.75 0 1 1 .756 1.295l-1.878 1.096V15a.75.75 0 0 1-1.5 0v-1.82l-1.878-1.095a.75.75 0 0 1-.27-1.025ZM3 13.5a.75.75 0 0 1 .75.75v1.82l1.878 1.095a.75.75 0 1 1-.756 1.295l-2.25-1.312a.75.75 0 0 1-.372-.648v-2.25A.75.75 0 0 1 3 13.5Zm18 0a.75.75 0 0 1 .75.75v2.25a.75.75 0 0 1-.372.648l-2.25 1.312a.75.75 0 1 1-.756-1.295l1.878-1.096V14.25a.75.75 0 0 1 .75-.75Zm-9 5.25a.75.75 0 0 1 .75.75v.944l1.122-.654a.75.75 0 1 1 .756 1.295l-2.25 1.313a.75.75 0 0 1-.756 0l-2.25-1.313a.75.75 0 1 1 .756-1.295l1.122.654V19.5a.75.75 0 0 1 .75-.75Z"
            clip-rule="evenodd" />
        </svg>
        <h3 class="mt-4 text-md font-medium text-white"><%= req.translations.noInstances %></h3>
        <p class="mt-1 text-sm text-neutral-400"><%= req.translations.noInstancesText %></p>
      </div>
    <% } else { %>
      <div class="overflow-hidden shadow ring-1 ring-white/5 rounded-lg">
        <table class="min-w-full divide-y divide-white/10">
          <thead class="bg-white/5">
            <tr>
              <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-white sm:pl-6">Instance</th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">Status</th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">RAM Usage</th>
              <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">CPU Usage</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-white/5 bg-white/5">
            <% instances.forEach(function (instance) { %>
              <tr onclick="window.location.href = href='../instance/<%= instance.Id %>';" class="hover:bg-white/[0.05] cursor-pointer transition-colors" data-instance-id="<%= instance.Id %>">
                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
                  <div class="flex items-center">
                    <div class="rounded-xl bg-white/5 p-2 mr-3">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 text-white">
                        <path d="M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z" />
                      </svg>
                    </div>
                    <a href="../instance/<%= instance.Id %>" class="font-medium text-white hover:text-neutral-300"><%= instance.Name %></a>
                  </div>
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm">
                  <span data-status-bg class="bg-neutral-600/20 text-neutral-400 px-2.5 py-1 rounded-full text-xs font-medium">
                    <span data-status>
                      <svg class="animate-spin h-3 w-3 text-white mr-1 inline-flex" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                      <%= req.translations.loading %>
                    </span>
                  </span>
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-400">
                  <span data-ram-usage>
                    <svg class="animate-spin h-3 w-3 text-white mr-1 inline-flex" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <%= req.translations.loading %>
                  </span>
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-400">
                  <span data-cpu-usage>
                    <svg class="animate-spin h-3 w-3 text-white mr-1 inline-flex" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <%= req.translations.loading %>
                  </span>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } %>
  </div>
</main>
<%- include('components/footer') %>

<style>
  #instance-toggle:checked + .bg-white\/10 {
    background-color: rgba(255, 255, 255, 0.2);
  }
  #instance-toggle:checked + .bg-white\/10 + .dot {
    transform: translateX(100%);
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const toggleSwitch = document.getElementById('instance-toggle');
    if (toggleSwitch) {
      toggleSwitch.addEventListener('change', function () {
        if (this.checked) {
          window.location.href = '/instances?see=other';
        } else {
          window.location.href = '/instances';
        }
      });
    }

    const instances = document.querySelectorAll('[data-instance-id]');
    instances.forEach(instance => {
      const containerId = instance.dataset.instanceId;
      const isSecure = window.location.protocol === 'https:';
      const wsProtocol = isSecure ? 'wss' : 'ws';
      const wsPort = isSecure ? '' : `:<%= config.port %>`;
      const socket = new WebSocket(`${wsProtocol}://<%= config.domain %>${wsPort}/stats/${containerId}`);

      const statusElement = instance.querySelector('[data-status]');
      const statusBg = instance.querySelector('[data-status-bg]');
      const ramUsageElement = instance.querySelector('[data-ram-usage]');
      const ramLimitElement = instance.querySelector('[data-ram-limit]');
      const cpuUsageElement = instance.querySelector('[data-cpu-usage]');

      function formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0.00 B';
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['B', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
      }

      function isValidJson(str) {
            try {
              JSON.parse(str);
            } catch (e) {
              return false;
            }
            return true;
        }

      socket.onmessage = event => {
        let stats;

        try {
          if (isValidJson(event.data)) stats = JSON.parse(event.data);
        } catch (e) {
          if (event.data.includes('The skyportd instance appears to be down. Retrying...')) {
            statusBg.classList.remove('bg-neutral-600/20');
            statusBg.classList.add('bg-yellow-600/10');
            statusElement.className = 'text-orange-500';
            statusElement.textContent = 'Skyportd is Offline!';
            socket.close();
            return;
          } else if (event.data.includes('Container not found')) {
            statusBg.classList.remove('bg-neutral-600/20');
            statusBg.classList.add('bg-yellow-600/10');
            statusElement.className = 'text-orange-500';
            statusElement.textContent = 'Container not found!';
            socket.close();
            return null;
          }
        }

        if (stats && stats.error) {
          console.error('Error fetching stats:', stats.error);
          return;
        }

        if (!stats || stats.error) {
          ramUsageElement.textContent = '0 B <%= req.translations.ramUsage %>';
          cpuUsageElement.textContent = '0% <%= req.translations.cpuUsage %>';
          return;
        }

        const ramUsageRaw = stats.memory_stats.usage / 1024;
        const ramUsage = isNaN(ramUsageRaw) ? '0 B' : formatBytes(ramUsageRaw);
        const ramLimitRaw = stats.memory_stats.limit / 1024;
        const ramLimit = isNaN(ramLimitRaw) ? '0 B' : formatBytes(ramLimitRaw);
        ramUsageElement.textContent = ramUsage + ' <%= req.translations.ramUsage %>';

        if (isNaN(ramUsageRaw)) {
          statusElement.className = 'text-neutral-500';
          statusBg.classList.remove('bg-neutral-600/20');
          statusBg.classList.add('bg-red-700/30');
          statusElement.classList.add('text-red-500');
          statusElement.textContent = 'Offline';
        } else if (ramUsageRaw > 1) {
          statusBg.classList.remove('bg-neutral-600/20');
          statusBg.classList.add('bg-emerald-600/10');
          statusElement.className = 'text-emerald-500';
          statusElement.textContent = 'Online';
        }

        const cpuDelta = stats.cpu_stats.cpu_usage.total_usage - stats.precpu_stats.cpu_usage.total_usage;
        const systemCpuDelta = stats.cpu_stats.system_cpu_usage - stats.precpu_stats.system_cpu_usage;
        const cpuUsagePercent = (cpuDelta && systemCpuDelta && !isNaN(cpuDelta) && !isNaN(systemCpuDelta))
          ? ((cpuDelta / systemCpuDelta) * 100).toFixed(2) + '%'
          : '0%';
        cpuUsageElement.textContent = cpuUsagePercent + ' <%= req.translations.cpuUsage %>';
      };
    });
  });
</script>